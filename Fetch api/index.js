// –°–¥–µ–ª–∞–π GET-–∑–∞–ø—Ä–æ—Å –∫:

// https://jsonplaceholder.typicode.com/posts
// üëâ –¢–≤–æ—è –∑–∞–¥–∞—á–∞:

// –ü–æ–ª—É—á–∏ –¥–∞–Ω–Ω—ã–µ.

// –í—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ (title) –ø–µ—Ä–≤—ã—Ö 5 –ø–æ—Å—Ç–æ–≤.
const url = "https://jsonplaceholder.typicode.com/posts";
fetch(url)
  .then((response) => response.json())
  .then((posts) => {
    posts.slice(0, 5).forEach((post) => {
      console.log(`Title: ${post.title}`);
    });
  })
  .catch((error) => {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
  });

//   –°–¥–µ–ª–∞–π –∑–∞–ø—Ä–æ—Å –∫ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É URL:

// https://jsonplaceholder.typicode.com/postsss
// üëâ –¢–≤–æ—è –∑–∞–¥–∞—á–∞:

// –û–±—Ä–∞–±–æ—Ç–∞–π –æ—à–∏–±–∫—É —Å –ø–æ–º–æ—â—å—é try...catch.

// –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Äî –≤—ã–≤–µ–¥–∏ "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö".

const invalidUrl = "https://jsonplaceholder.typicode.com/postsss";
fetch(invalidUrl).catch((error) => {
  console.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:", error);
});
console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞:", error);

// –°–¥–µ–ª–∞–π POST-–∑–∞–ø—Ä–æ—Å –Ω–∞:
// https://jsonplaceholder.typicode.com/posts
// üëâ –¢–≤–æ—è –∑–∞–¥–∞—á–∞:

// –û—Ç–ø—Ä–∞–≤—å –æ–±—ä–µ–∫—Ç:

// {
//   title: "–ú–æ–π –ø–æ—Å—Ç",
//   body: "–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞",
//   userId: 1
// }
// –í—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å id –Ω–æ–≤–æ–≥–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ –∏–∑ –æ—Ç–≤–µ—Ç–∞.

fetch(url, {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({
    title: "–ú–æ–π –ø–æ—Å—Ç",
    body: "–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞",
    userId: 1,
  }),
})
  .then((response) => response.json())
  .then((data) => {
    console.log(`ID –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞: ${data.id}`);
  })
  .catch((error) => {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞:", error);
  });
