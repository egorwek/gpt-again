// –°–¥–µ–ª–∞–π GET-–∑–∞–ø—Ä–æ—Å –ø–æ –∞–¥—Ä–µ—Å—É:

// https://jsonplaceholder.typicode.com/users
// üëâ –¢–≤–æ—è –∑–∞–¥–∞—á–∞:

// –°–æ–∑–¥–∞–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é loadUsers().

// –° –ø–æ–º–æ—â—å—é fetch –ø–æ–ª—É—á–∏ –¥–∞–Ω–Ω—ã–µ.

// –í—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

// üìå –ò—Å–ø–æ–ª—å–∑—É–π async/await.

async function loadUsers() {
  const url = "https://jsonplaceholder.typicode.com/users";
  try {
    const response = await fetch(url);
    if (!response.ok) {
      throw new Error("Network response was not ok");
    }
    const users = await response.json();
    users.forEach((user) => {
      console.log(`–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.name}`);
    });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
  }
}
loadUsers();

// –°–¥–µ–ª–∞–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL:

// https://jsonplaceholder.typicode.com/userrs
// üëâ –¢–≤–æ—è –∑–∞–¥–∞—á–∞:

// –û–±–µ—Ä–Ω–∏ fetch –≤ try...catch.

// –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∏–ª–∏ response.ok === false, –≤—ã–≤–µ–¥–∏:
// –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö

async function loadInvalidUsers() {
  const invalidUrl = "https://jsonplaceholder.typicode.com/userrs";
  try {
    const response = await fetch(invalidUrl);
    if (!response.ok) {
      throw new Error("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");
    }
    const users = await response.json();
    console.log(users);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
  }
}
loadInvalidUsers();

// –ü–æ–ª—É—á–∏ –ø–æ—Å—Ç —Å ID 1:

// https://jsonplaceholder.typicode.com/posts/1
// –ò–∑ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ –≤–æ–∑—å–º–∏ –ø–æ–ª–µ userId.

// –°–¥–µ–ª–∞–π –≤—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å ‚Äî –ø–æ–ª—É—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —ç—Ç–∏–º userId:

// https://jsonplaceholder.typicode.com/users/{userId}
// –í—ã–≤–µ–¥–∏ –∏–º—è –∞–≤—Ç–æ—Ä–∞ –ø–æ—Å—Ç–∞.
async function loadPostAndUser() {
  const postUrl = "https://jsonplaceholder.typicode.com/posts/1";
  try {
    const postResponse = await fetch(postUrl);
    if (!postResponse.ok) {
      throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞");
    }
    const post = await postResponse.json();
    const userId = post.userId;

    const userUrl = `https://jsonplaceholder.typicode.com/users/${userId}`;
    const userResponse = await fetch(userUrl);
    if (!userResponse.ok) {
      throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
    }
    const user = await userResponse.json();
    console.log(`–ò–º—è –∞–≤—Ç–æ—Ä–∞ –ø–æ—Å—Ç–∞: ${user.name}`);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞:", error);
  }
}
loadPostAndUser();
